function getRgbFromHex(hex){if(hex[0]==='#'){hex=hex.slice(1)}
return{r:parseInt(hex[0]+hex[1],16),g:parseInt(hex[2]+hex[3],16),b:parseInt(hex[4]+hex[5],16),}}
function blend(baseValue,overlayValue,alpha){return Math.round((overlayValue*alpha)+(baseValue*(1-alpha)))}
function computeAlphaBlend(baseHex,overlayHex,alpha){var base=getRgbFromHex(baseHex);var overlay=getRgbFromHex(overlayHex);var blended={r:blend(base.r,overlay.r,alpha),g:blend(base.g,overlay.g,alpha),b:blend(base.b,overlay.b,alpha),};return'#'+blended.r.toString(16)+blended.g.toString(16)+blended.b.toString(16)};var FullMonth=["January","February","March","April","May","June","July","August","September","October","November","December"];var AbbrMonth=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"];var FullDaysOfWeek=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var AbbrDaysOfWeek=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];var MinutesInHour=60;var SecondsInMinute=60;var MillisecondsInSecond=1000;var TimeConstantsBase=(function(){function TimeConstantsBase(){}
Object.defineProperty(TimeConstantsBase.prototype,"MillisecondsInASecond",{get:function(){return 1000},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"SecondsInAMinute",{get:function(){return 60},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"MillisecondsInAMinute",{get:function(){var milli=this.MillisecondsInASecond*this.SecondsInAMinute;return milli},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"MinutesInAnHour",{get:function(){return 60},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"MillisecondsInAnHour",{get:function(){var milli=this.MillisecondsInAMinute*this.MinutesInAnHour;return milli},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"HoursInADay",{get:function(){return 24},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"MillisecondsInADay",{get:function(){var milli=this.MillisecondsInAnHour*this.HoursInADay;return milli},enumerable:!1,configurable:!0});Object.defineProperty(TimeConstantsBase.prototype,"DaysInAYear",{get:function(){return 365},enumerable:!1,configurable:!0});return TimeConstantsBase}());var TimeConstants=new TimeConstantsBase();var TimeSpan=(function(){function TimeSpan(milli){this.milli=milli;this.totalSeconds=Math.floor(milli/TimeConstants.MillisecondsInASecond);this.totalMinutes=Math.floor(milli/TimeConstants.MillisecondsInAMinute);this.totalHours=Math.floor(milli/TimeConstants.MillisecondsInAnHour);this.totalDays=Math.floor(milli/TimeConstants.MillisecondsInADay);this.seconds=this.totalSeconds%TimeConstants.SecondsInAMinute;this.minutes=this.totalMinutes%TimeConstants.MinutesInAnHour;this.hours=this.totalHours%TimeConstants.HoursInADay;this.days=this.totalDays%TimeConstants.DaysInAYear}
TimeSpan.prototype.toString=function(){var duration="";if(this.days>0){duration+="".concat(this.days,"d ")}
if(this.hours>0){duration+="".concat(this.hours,"h ")}
if(this.minutes>0){duration+="".concat(this.minutes,"m ")}
if(this.seconds>0){duration+="".concat(this.seconds,"s")}else if(duration==""){duration="..."}
return duration};return TimeSpan}());var DateTime=(function(){function DateTime(date,offset){this._date=date;this.offset=offset}
DateTime.parse=function(dateTime,offset){if(offset===void 0){offset=0}
if(dateTime){var irregularFormatRegex=/(\/Date\()(.*)(\)\/)/i;if(typeof dateTime==="string"&&irregularFormatRegex.test(dateTime)){var match=irregularFormatRegex.exec(dateTime);dateTime=parseInt(match[2])}
var milli=typeof dateTime==="number"?dateTime:Date.parse(dateTime);if(isNaN(milli)){milli=1}
offset=offset*TimeConstants.MillisecondsInAnHour;milli+=offset;var date=new Date(milli);return new DateTime(date,offset)}else{return null}};DateTime.now=function(){return new DateTime(new Date(),8)};Object.defineProperty(DateTime.prototype,"year",{get:function(){return this._date.getFullYear()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"month",{get:function(){return this._date.getMonth()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"date",{get:function(){return this._date.getDate()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"day",{get:function(){return this._date.getDay()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"hour",{get:function(){return this._date.getHours()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"minutes",{get:function(){return this._date.getMinutes()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"seconds",{get:function(){return this._date.getSeconds()},enumerable:!1,configurable:!0});Object.defineProperty(DateTime.prototype,"time",{get:function(){return this._date.getTime()},enumerable:!1,configurable:!0});DateTime.difference=function(start,end){var timeDiff=end.getTime()-start.getTime();return new TimeSpan(timeDiff)};DateTime.prototype.difference=function(secondDate){var diff=this.time-secondDate.time;return new TimeSpan(diff)};DateTime.prototype.addDays=function(days){var newDate=new Date(this._date);newDate.setDate(this.date+days);return new DateTime(newDate,this.offset)};DateTime.prototype.addYears=function(years){var newDate=new Date(this._date);newDate.setFullYear(this.year+years);return new DateTime(newDate,this.offset)};DateTime.prototype.toString=function(format){if(format===void 0){format="yyyy/MM/dd HH:mm:ss"}
if(!this._date)
return null;var year=this.year.toString();var subYear=year.padStart(2,'0').slice(-2);var month=this.month;var day=this.day;var date=this.date;var hour=this.hour;var _12Hour=hour<13?hour:hour-12;var isAM=hour<12;var minutes=this.minutes;var seconds=this.seconds;format=format.replace(/dd/g,date.toString().padStart(2,'0'));format=format.replace(/d/g,date);format=format.replace(/HH/g,hour.toString().padStart(2,'0'));format=format.replace(/H/g,hour);format=format.replace(/hh/g,_12Hour.toString().padStart(2,'0'));format=format.replace(/h/g,_12Hour);format=format.replace(/mm/g,minutes.toString().padStart(2,'0'));format=format.replace(/m/g,minutes);format=format.replace(/ss/g,seconds.toString().padStart(2,'0'));format=format.replace(/s/g,seconds);format=format.replace(/yyyyy/g,year.padStart(5,'0'));format=format.replace(/yyyy/g,year.padStart(4,'0'));format=format.replace(/yyy/g,year.padStart(3,'0'));format=format.replace(/yy/g,subYear);format=format.replace(/y/g,parseInt(subYear));format=format.replace(/MMMM/g,"####");format=format.replace(/MMM/g,"###");var _month=month+1;format=format.replace(/MM/g,_month.toString().padStart(2,'0'));format=format.replace(/M/g,_month);format=format.replace(/tt/g,isAM?"AM":"PM");format=format.replace(/t/g,isAM?"A":"P");format=format.replace(/dddd/g,FullDaysOfWeek[day]);format=format.replace(/ddd/g,AbbrDaysOfWeek[day]);format=format.replace(/####/g,FullMonth[month]);format=format.replace(/###/g,AbbrMonth[month]);return format};return DateTime}());var ContextMargin=3;var ContextTopOffset=7;var ContextMenuOption=(function(){function ContextMenuOption(label){this.label=label;this.callbacks=[];this.enableChallenge=function(){return!0};this.visibleChallenge=function(){return!0}}
ContextMenuOption.prototype.onClick=function(callback){this.callbacks.push(callback)};ContextMenuOption.prototype.visible=function(challenge){this.visibleChallenge=challenge};ContextMenuOption.prototype.enable=function(challenge){this.enableChallenge=challenge};ContextMenuOption.prototype.draw=function(data){var _this=this;var option;var visible=this.visibleChallenge(data);var enable=this.enableChallenge(data);if(visible){option=syn.create("button");option.text(this.label).addClass("core-context-action").enable(enable);option.click(function(e){_this.callbacks.forEach(function(c){return c(data)})})}
return option};return ContextMenuOption}());var ContextMenu=(function(){function ContextMenu(id,root){this.id=id;this.root=syn.wrap(root);this.options=[];this.data=[]}
ContextMenu.prototype.addOption=function(option){this.options.push(option)};ContextMenu.prototype.addOptions=function(){var _this=this;var options=[];for(var _i=0;_i<arguments.length;_i++){options[_i]=arguments[_i]}
options.forEach(function(o){return _this.options.push(o)})};ContextMenu.prototype.draw=function(dataIndex){var data=this.data[dataIndex];var options=[];this.options.forEach(function(o){options.push(o.draw(data))});return options};ContextMenu.prototype.addData=function(data){return this.data.push(data)-1};ContextMenu.prototype.clearData=function(){this.data=[]};return ContextMenu}());var ContextMenuGlobal=(function(){function ContextMenuGlobal(){this.element=syn.create("div");this.menus={};this.activeTrigger;this.triggerTop;this.triggerLeft;this.init();this.initEventListeners()}
ContextMenuGlobal.prototype.init=function(){this.element.addClass("core-context");syn.body.append(this.element);Node.prototype.addContext=function(context,data){var dataIndex=context.addData(data);syn.wrap(this).data("context-id",context.id).data("index",dataIndex);return this}};ContextMenuGlobal.prototype.initEventListeners=function(){var _this=this;syn.document.on("contextmenu",function(e){return _this.onContext(e)});syn.document.click(function(e){return _this.onClick(e)})};ContextMenuGlobal.prototype.addMenu=function(id,root){var menu=new ContextMenu(id,root);this.menus[id]=menu;return menu};ContextMenuGlobal.prototype.onContext=function(e){var target;var isDocument=!1;var contextId;var dataIndex;do{if(target){target=target===null||target===void 0?void 0:target.parentNode}else{target=e.target}
isDocument=target===document;contextId=!isDocument?target.getAttribute("data-context-id"):null}while(!isDocument&&!contextId);target=syn.wrap(target);dataIndex=target.data("index");if(contextId){e.preventDefault();this.reset();this.activeTrigger=target;this.triggerTop=e.clientY;this.triggerLeft=e.clientX;this.show(contextId,dataIndex);target.addClass("active")}};ContextMenuGlobal.prototype.onClick=function(e){if(e.target.isSameNode(this.element.self)==!1){this.reset()}};ContextMenuGlobal.prototype.show=function(contextId,dataIndex){var element=this.element;var menu=this.menus[contextId];var options=menu.draw(dataIndex);options.forEach(function(o){if(o){element.append(o)}});var root=menu.root;var rootTop=root.boundsTop+ContextMargin;var rootRight=root.boundsRight-ContextMargin;var rootBottom=root.boundsBottom-ContextMargin;var rootLeft=root.boundsLeft+ContextMargin;var contextTop=this.triggerTop-ContextTopOffset;var contextLeft=this.triggerLeft;var contextBottom=contextTop+element.boundsHeight;var contextRight=contextLeft+element.boundsWidth;if(contextLeft<rootLeft){contextLeft=rootLeft}else if(contextRight>rootRight){contextLeft=rootRight-element.boundsWidth}
if(contextTop<rootTop){contextTop=rootTop}else if(contextBottom>rootBottom){contextTop=rootBottom-element.boundsHeight}
element.addClass("active");element.self.style.top="".concat(contextTop,"px");element.self.style.left="".concat(contextLeft,"px")};ContextMenuGlobal.prototype.reset=function(){var _a;this.element.empty();this.element.removeClass("active");this.element.attr("style","");(_a=this.activeTrigger)===null||_a===void 0?void 0:_a.removeClass("active");this.activeTrigger=undefined;this.triggerTop=undefined;this.triggerLeft=undefined};return ContextMenuGlobal}());var globalContext=new ContextMenuGlobal();(function(){const template=document.createElement("template");template.innerHTML=`
    <style>
    :host {
        background-image: -webkit-linear-gradient(-45deg, #252A32 50%, #2d343e 50%);
        border-radius: 10px;
        box-shadow: 0 3px 6px rgb(0 0 0 / 16%), 0 3px 6px rgb(0 0 0 / 23%);
        box-sizing: border-box;
        color: #FFF;
        cursor: pointer;
        font-family: 'Inter', sans-serif;
        height: 180px;
        max-height: 180px;
        max-width: 320px;
        min-height: 180px;
        min-width: 320px;
        outline: none;
        padding: 20px;
        position: relative;
        user-select: none;
        width: 320px;
    }
    
    :host::before {
        border: solid 3px #4D90FE;
        border-radius: 13px;
        box-sizing: border-box;
        content: "";
        display: none;
        height: calc(100% + 6px);
        left: -3px;
        position: absolute;
        top: -3px;
        width: calc(100% + 6px);
        z-index: 0;
    }
    
    :host:active::before {
        display: block;
    }
    
    .body {
        display: flex;
        flex-direction: column;
        height: 100%;
    }
    
    .body > .title {
        font-size: 16px;
        font-weight: 500;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .balances {
        align-items: center;
        display: flex;
        flex-grow: 1;
    }

    .numbers,
    .category {
        color: #ffffffcc;
        font-size: 13px;
        height: 13px;
        line-height: 13px;
        margin: 0;
    }

    .numbers {
        display: flex;
        margin-bottom: 8px;
    }
    
    .numbers span {
        margin-right: 8px;
    }

    ::slotted(img[slot=icon]) {
        bottom: 23px;
        height: 22px;
        position: absolute;
        right: 18px;
        shape-rendering: geometricPrecision;
    }
    </style>
    <div class="body">
        <span class="title"></span>
        <div class="balances">
            <slot></slot>
        </div>
        <p class="numbers">
            <span>••••</span>
            <span>••••</span>
            <span>••••</span>
            <span class="number">••••</span>
        </p>
        <span class="category"></span>
    </div>
    <slot name="icon"></slot>
    `;class AccountCard extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.appendChild(template.content.cloneNode(!0))}
static get observedAttributes(){return["data-title","data-number","data-category"]}
get title(){return this.getAttribute("data-title")}
set title(value){this.setAttribute("data-title",value);this.setTitle()}
get number(){return this.getAttribute("data-number")}
set number(value){this.setAttribute("data-number",value??"••••");this.setNumber()}
get category(){return this.getAttribute("data-category")}
set category(value){this.setAttribute("data-category",value);this.setCategory()}
get titleSpan(){this._titleSpan??=this.shadowRoot.querySelector(".title");return this._titleSpan}
get numberSpan(){this._numberSpan??=this.shadowRoot.querySelector(".number");return this._numberSpan}
get categorySpan(){this._categorySpan??=this.shadowRoot.querySelector(".category");return this._categorySpan}
connectedCallback(){this.setTitle();this.setNumber();this.setCategory()}
attributeChangedCallback(name){switch(name){case "data-title":this.setTitle();break;case "data-number":this.setNumber();break;case "data-category":this.setCategory();break}}
setTitle(){this.titleSpan.innerHTML=this.title}
setNumber(){const number=this.number?.slice(-4);this.numberSpan.innerHTML=number}
setCategory(){this.categorySpan.innerHTML=this.category}}
customElements.define("account-card",AccountCard)})();(function(){const template=document.createElement("template");template.innerHTML=`
    <style>
    :host {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        gap: 5px;
    }

    .title {
        color: #ffffffcc;
        font-size: 13px;
        height: 13px;
        margin: 0;
    }
    
    .figure {
        font-size: 18px;
        font-weight: 500;
        height: 20px;
        line-height: 20px;
    }

    .figure.medium {
        font-size: 16px;
    }

    .figure.small {
        font-size: 15px;
    }

    .figure::after {
        display: inline-block;
        color: #ffffff80;
        font-size: 13px;
        font-weight: 500;
        line-height: 13px;
        margin-left: 5px;
        vertical-align: top;
    }

    .figure.medium::after {
        font-size: 12px;
        margin-left: 4px;
    }

    .figure.small::after {
        font-size: 11px;
        margin-left: 0;
    }

    .currency-php::after {
        content: "PHP";
    }
    </style>
    <span class="title">Projection</span>
    <span class="figure currency-php">
        <slot></slot>
    </span>
    `;class CardBalance extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.appendChild(template.content.cloneNode(!0))}
static get observedAttributes(){return["data-title","data-currency"]}
get title(){return this.getAttribute("data-title")}
set title(value){this.setAttribute("data-title",value);this.setTitle()}
get currency(){return this.getAttribute("data-currency")??"php"}
set currency(value){this.setAttribute("data-currency",value);this.setCurrency()}
get titleSpan(){this._titleSpan??=this.shadowRoot.querySelector(".title");return this._titleSpan}
get figureSpan(){this._figureSpan??=this.shadowRoot.querySelector(".figure");return this._figureSpan}
get slot(){this._slot??=this.shadowRoot.querySelector("slot");return this._slot}
connectedCallback(){this.setTitle();this.setCurrency();this.slot.addEventListener("slotchange",()=>{const nodes=this.slot.assignedNodes();const content=nodes[0].textContent.replace(/,/g,'');const balance=parseFloat(content);if(isNaN(balance))return;if(balance>=1000000)
this.figureSpan.classList.add("small");else if(balance>=100000)
this.figureSpan.classList.add("medium");})}
attributeChangedCallback(name){switch(name){case "data-title":this.setTitle();break;case "data-currency":this.setCurrency();break}}
setTitle(){this.titleSpan.innerHTML=this.title}
setCurrency(){this.setAttribute("class",`figure currency-${this.currency}`)}}
customElements.define("card-balance",CardBalance)})();(function(){const template=document.createElement("template");template.innerHTML=`
    <style>
    :host {
        --radius: 5px;
        --radius-mob: 15px;
        --margin: 15px;
        --top: calc(44px / 2);
        --width: 500px;
    }
    
    :host {
        background-color: rgba(0, 0, 0, 0.1);
        display: none;
        height: 100%;
        left: 0;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 4;
    }

    :host(.visible) {
        display: block;
    }
    
    .panel {
        background-color: #fff;
        border-top-left-radius: var(--radius-mob);
        border-top-right-radius: var(--radius-mob);
        box-shadow: 0 0 2px rgba(0, 0, 0, 0.2), 0 calc(32 * 0.5px) calc((32 * 1px)) rgba(0, 0, 0, 0.24);
        overflow: hidden;
        position: absolute;
        right: 0;
        top: 100%;
        height: calc(100% - var(--top));
        width: 100%;
    }

    slot {
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        gap: 15px;
        height: 100%;
        max-height: 100%;
        padding: 15px;
    }
    
    /* Tablet & Up */
    @media only screen and (min-width: 768px) {
        .panel {
            border-radius: var(--radius);
            height: calc(100% - var(--margin) * 2);
            right: calc(var(--width) * -1);
            top: var(--margin);
            width: 500px;
        }
    }
    </style>

    <div class="panel">
        <slot></slot>
    </div>
    `;class TransactionPanel extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.appendChild(template.content.cloneNode(!0));this.clickedThroughPanel;this.overlay={alpha:0.0}}
get panel(){this._panel??=this.shadowRoot.querySelector(".panel");return this._panel}
connectedCallback(){this.addEventListener("click",this.hide);this.panel.addEventListener("click",()=>this.clickedThroughPanel=!0)}
show(){this.classList.add("visible");this.animate(!0,0.1)}
hide(){if(this.clickedThroughPanel){this.clickedThroughPanel=!1;return}
this.animate(!1,0)}
animate(show,alpha){var timeline=anime.timeline({duration:300,easing:"easeOutQuint",update:()=>this.changeTheme(),complete:()=>{if(!show){this.classList.remove("visible")}}});const panelAnim={targets:this.panel};if(window.innerWidth<768)
panelAnim.top=show?22:window.innerHeight;else panelAnim.right=show?15:-531;timeline.add(panelAnim,0);const background=`rgba(0, 0, 0, ${alpha})`;timeline.add({targets:this,background:background},0);timeline.add({targets:this.overlay,alpha:alpha},0)}
changeTheme(){const theme=computeAlphaBlend("f2f2f2","000000",this.overlay.alpha);document.querySelector('meta[name="theme-color"]').setAttribute("content",theme)}}
customElements.define("transaction-panel",TransactionPanel)})();var Operation;(function(Operation){Operation[Operation.Create=0]="Create";Operation[Operation.Update=1]="Update"})(Operation||(Operation={}));var AccountStatus;(function(AccountStatus){AccountStatus[AccountStatus.Active=1]="Active";AccountStatus[AccountStatus.Closed=0]="Closed"})(AccountStatus||(AccountStatus={}));var Account=(function(){function Account(){}
return Account}());var Transaction=(function(){function Transaction(){}
return Transaction}());var TransactionManager=(function(){function TransactionManager(){this.operation=Operation.Create}
TransactionManager.prototype.loadAccount=function(account){this.account=account;this.registerComponents();this.refresh()};TransactionManager.prototype.refresh=function(){this.loadCard();this.loadBalances();this.loadTransactions()};TransactionManager.prototype.registerComponents=function(){if(this.isRegistered)
return;this.registerMenu();this.registerEditor();this.isRegistered=!0};TransactionManager.prototype.registerMenu=function(){var _a;var _this=this;this.contextMenu=globalContext.addMenu("transactions_row",this.container);var options=["Update","Post","Delete","Cancel"];var menuOptions=options.reduce(function(mo,o){var option=new ContextMenuOption(o);option.visible(function(trans){return trans.Posted==(o=="Cancel")});mo.push(option);return mo},[]);menuOptions[0].onClick(function(trans){return _this.updateBtnClicked(trans)});menuOptions[1].onClick(function(trans){return _this.post(trans)});menuOptions[2].onClick(function(trans){return _this.delete(trans)});menuOptions[3].onClick(function(trans){return _this.cancel(trans)});(_a=this.contextMenu).addOptions.apply(_a,menuOptions)};TransactionManager.prototype.registerEditor=function(){var _this=this;var editor=$("#editor");this.command.addEventListener("click",function(){_this.operation=Operation.Create;editor.find("input").each(function(idx,ipt){$(ipt).val("")});_this.editor.show();_this.changeTheme("#999999")});var dissmissEditorBtn=document.querySelector("#dismiss_editor_dialog_btn");dissmissEditorBtn.addEventListener("click",function(){_this.changeTheme("#dadada");_this.editor.hide()});$("#save_btn").click(function(){return _this.save()})};TransactionManager.prototype.loadCard=function(){var account=this.account;this.card.title=account.Title;this.card.number=account.AccountNumber;this.card.category=account.Category};TransactionManager.prototype.loadBalances=function(){var data={AccountId:this.account.Id};var balances=this.card.querySelectorAll("card-balance");axios.get("report/balances.php",{params:data}).then(function(response){var payload=response.data;var content=payload.content;if(!payload.state){alert("Oops! ".concat(content));return}
balances[0].innerText=toCurrency(content.Running);balances[1].innerText=toCurrency(content.Projected)}).catch(function(error){alert("An error occured.");console.log(error)})};TransactionManager.prototype.loadTransactions=function(){var _this=this;var data={AccountId:this.account.Id};axios.get("transaction/crud/read.php",{params:data}).then(function(response){var payload=response.data;var content=payload.content;if(!payload.state){_this.container.innerHTML="<p class=\"centered\">Oops! ".concat(content,"</p>");return}
_this.container.innerHTML=null;var transactions=_this.groupTransactions(content);for(var key in transactions){var group=_this.newGroup(key,transactions[key]);_this.container.appendChild(group)}}).catch(function(error){alert("An error occured.");console.log(error)})};TransactionManager.prototype.groupTransactions=function(trans){var _a;var groups={};for(var _i=0,trans_1=trans;_i<trans_1.length;_i++){var t=trans_1[_i];var key=t.Date+t.Posted;((_a=groups[key])!==null&&_a!==void 0?_a:(groups[key]=[])).push(t)}
return groups};TransactionManager.prototype.newGroup=function(date,trans){var group=$("<div>").addClass("transaction-group");var header=$("<p>").addClass("transaction-group-header");var body=$("<div>").addClass("transaction-group-body");var dateTime=DateTime.parse(date.slice(0,-1));header.text(dateTime.toString("MMM. dd, yyyy"));var status=trans[0].Posted?"actual":"projection";header.addClass(status);group.append(header);group.append(body);for(var _i=0,trans_2=trans;_i<trans_2.length;_i++){var t=trans_2[_i];var row=this.newRow(t);body.append(row)}
return group[0]};TransactionManager.prototype.newRow=function(trans){var _this=this;var status=trans.Posted?"actual":"projection";var row=$("<div class=\"transaction-row ".concat(status,"\">"));var main=$("<div>").addClass("main-content");var desc=$("<div class='transaction-description'><p>".concat(trans.Description,"</p></div>"));var summary=$("<div class='transaction-summary'>");main.append(desc);main.append(summary);row.append(main);var isDebit=trans.Debit>trans.Credit;var transAmount=isDebit?trans.Debit:trans.Credit;transAmount=toCurrency(transAmount.toString());var amount=$("<p>".concat(!isDebit?"-":""," PHP ").concat(transAmount,"</p>"));var ref=$("<p>REF: N/A</p>");summary.append(amount);summary.append(ref);row[0].addContext(this.contextMenu,trans);var actions=$("<div>").addClass("actions-container");row.append(actions);if(status==="projection"){var editAction=this.newAction("edit","Edit");var postAction=this.newAction("post","CompletedSolid");var deleteAction=this.newAction("delete","Delete");editAction.click(function(){collapseActions();_this.updateBtnClicked(trans)});postAction.click(function(){collapseActions();_this.post(trans.Id)});deleteAction.click(function(){collapseActions();_this.delete(trans.Id)});actions.append(editAction);actions.append(postAction);actions.append(deleteAction)}else{var cancelAction=this.newAction("delete","Cancel");actions.append(cancelAction);cancelAction.click(function(){collapseActions();_this.cancel(trans.Id)})}
var initialTouch;var initialLeft;main[0].addEventListener("touchstart",function(e){initialTouch=e.changedTouches[0];initialLeft=parseInt(main.css("left"))});main[0].addEventListener("touchmove",function(e){var touch=Array.from(e.changedTouches).find(function(tch){return tch.identifier===initialTouch.identifier});if(touch===undefined){console.log("No matches found of the initial touch.");return}
var delta=touch.pageX-initialTouch.pageX;var left=Math.min(0,initialLeft+delta);if(Math.abs(delta)>0)
e.preventDefault();main.css({left:left})});main[0].addEventListener("touchend",function(e){var touch=Array.from(e.changedTouches).find(function(tch){return tch.identifier===initialTouch.identifier});if(touch===undefined){console.log("No matches found of the initial touch.");return}
var left=parseInt(main.css("left"));var actionWidth=actions[0].clientWidth;var threshold=actionWidth/2;var snapPoint=actionWidth*(Math.abs(left)>threshold);anime({targets:main[0],left:-snapPoint,duration:200,easing:"easeInOutQuad"})});function collapseActions(){anime({targets:main[0],left:0,duration:200,easing:"easeInOutQuad"})}
return row};TransactionManager.prototype.newAction=function(name,symbol){var action=$("<div class=\"action action-".concat(name,"\" tabindex=\"-1\">"));var icon=$("<fluent-symbol-icon></fluent-symbol-icon>");action.append(icon);icon.attr("symbol",symbol);icon.attr("font-size",20);icon.attr("foreground","#fff");return action};TransactionManager.prototype.updateBtnClicked=function(data){this.operation=Operation.Update;var editor=$("#editor");editor.find("input").each(function(idx,ipt){ipt=$(ipt);var name=ipt.attr("name");ipt.val(data[name])});this.changeTheme("#999999");this.editor.show()};TransactionManager.prototype.save=function(){var _this=this;var endpoint="transaction/crud/".concat(Operation[this.operation],".php");var form=this.editor.querySelector("form");var data=new FormData(form);data.append("AccountId",this.account.Id.toString());var trans=Object.fromEntries(data.entries());axios.post(endpoint,trans).then(function(response){if(response.data.state)
_this.refresh();_this.operation=Operation.Create;_this.editor.hide();_this.changeTheme("#dadada")}).catch(function(error){console.log(error)})};TransactionManager.prototype.delete=function(trans){this.handlePost("transaction/crud/delete.php",trans)};TransactionManager.prototype.post=function(trans){this.handlePost("transaction/post/post.php",trans)};TransactionManager.prototype.cancel=function(trans){this.handlePost("transaction/post/cancel.php",trans)};TransactionManager.prototype.handlePost=function(endpoint,trans){var _this=this;axios.post(endpoint,trans).then(function(response){if(response.data.state)
_this.refresh();}).catch(function(error){console.log(error)})};TransactionManager.prototype.changeTheme=function(theme){document.querySelector("meta[name=\"theme-color\"]").setAttribute("content",theme)};return TransactionManager}());var __spreadArray=(this&&this.__spreadArray)||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}
return to.concat(ar||Array.prototype.slice.call(from))};var body;var refreshCommand;var toggleCommand;var closedAccounts;var contextMenu;var transactionPanel;var transaction;$(document).ready(function(){var isShowClosed=!1;body=document.querySelector("#layout_body");refreshCommand=document.querySelector("#refresh_command");toggleCommand=document.querySelector("#toggle_closed_command");transactionPanel=document.querySelector("transaction_panel");transaction=new TransactionManager();transaction.card=document.querySelector("#transaction_card");transaction.container=document.querySelector(".transaction-container");transaction.editor=document.querySelector("#editor_dialog");transaction.command=document.querySelector("#create_command");closedAccounts=[];contextMenu=globalContext.addMenu("accounts_card",body);refreshCommand===null||refreshCommand===void 0?void 0:refreshCommand.addEventListener("click",refreshAccounts);toggleCommand===null||toggleCommand===void 0?void 0:toggleCommand.addEventListener("click",function(){toggleCommand.icon=isShowClosed?"View":"Hide";toggleCommand.label=isShowClosed?"Show Closed Accounts":"Hide Closed Accounts";closedAccounts.forEach(function(card){if(isShowClosed)
card.hide();else card.show()});isShowClosed=!isShowClosed});var closeOption=new ContextMenuOption("Close");var deleteOption=new ContextMenuOption("Delete");closeOption.visible(function(d){return d.Status==="Active"});deleteOption.visible(function(d){return d.Status==="Active"});closeOption.onClick(function(acct){var conf=confirm("Close account \"".concat(acct.Title,"\"?"));if(conf){$.ajax({url:"account/crud/close.php",method:"POST",data:{Id:acct.Id},dataType:"JSON",success:function(payload){if(payload.state){refreshCategories()}else{alert(payload.content)}}})}});deleteOption.onClick(function(acct){var conf=confirm("Delete account \"".concat(acct.Title,"\"?"));if(conf){$.ajax({url:"account/crud/delete.php",method:"POST",data:{Id:acct.Id},dataType:"JSON",success:function(payload){if(payload.state){refreshCategories()}else{alert(payload.content)}}})}});contextMenu.addOptions(closeOption,deleteOption);refreshAccounts()});function refreshAccounts(){body.innerHTML='<p style="text-align: center;">Fetching Accounts...</p>';axios.get("account/crud/read_categorized.php").then(function(response){body.innerHTML=null;var accounts=response.data;if(accounts.state){var content=accounts.content;var categories=content.reduce(function(arr,acct){var categoryId=acct.CategoryId;if(!arr.some(function(cat){return cat.Id==acct.CategoryId}))
arr.push({Id:categoryId,Title:acct.Category,Color:acct.CategoryColor});return arr},[]);var categorized=content.reduce(function(map,acct){var _a;return map.set(acct.CategoryId,__spreadArray(__spreadArray([],(_a=map.get(acct.CategoryId))!==null&&_a!==void 0?_a:[],!0),[acct],!1))},new Map());refreshBalances(categories,categorized)}else{body.innerHTML="<p class=\"centered\">Oops! ".concat(accounts.content,"</p>")}}).catch(function(error){console.dir(error)})}
function refreshBalances(categories,categorized){categorized.forEach(function(accounts,_category){var _a,_b,_c;var category=(_a=categories.find(function(cat){return cat.Id==_category}))!==null&&_a!==void 0?_a:{};var color=(_b=category===null||category===void 0?void 0:category.Color)!==null&&_b!==void 0?_b:"9E9E9E";var title=(_c=category===null||category===void 0?void 0:category.Title)!==null&&_c!==void 0?_c:"Uncategorized";var container=$('<div class="category"></div>');var accountsGrid=$('<div class="accounts-grid"></div>');var tag=$("<fluent-symbol-icon symbol=\"Tag\" foreground=\"#".concat(color,"\" font-size=\"13\" class=\"tag\"></fluent-symbol-icon>"));var label=$("<span class=\"title\">".concat(title,"</span>"));body.appendChild(container[0]);body.appendChild(accountsGrid[0]);container.append(tag);container.append(label);$.each(accounts,function(idx,account){var card=newCard(account,title);accountsGrid.append(card)})})}
function newCard(account,category){var _a,_b;var accountNumber=(_b=(_a=account.AccountNumber)===null||_a===void 0?void 0:_a.slice(-4))!==null&&_b!==void 0?_b:"••••";var bankIcon=account.BankIcon;var card=$("<account-card>");var runningBalance=$("<card-balance>...</card-balance>");var projectedBalance=$("<card-balance>...</card-balance>");var accountBankIcon=$('<img class="account-bank-icon" slot="icon">');card.append(runningBalance);card.append(projectedBalance);card.append(accountBankIcon);card.prop("title",account.Title);card.prop("number",accountNumber);card.prop("category",category);runningBalance.prop("title","Actual");projectedBalance.prop("title","Projection");if(bankIcon!=null){accountBankIcon.attr("src","assets/images/bank_icons/".concat(bankIcon,".svg"));if(bankIcon=="master_card")
accountBankIcon.attr("style","bottom:16px;height:35px;");if(bankIcon=="ubp"||bankIcon=="gcash")
accountBankIcon.attr("style","bottom:20px;height:30px;right:25px;");if(bankIcon=="cimb")
accountBankIcon.attr("style","bottom:20px;height:28px;right:25px;");}
card[0].addContext(contextMenu,account);if(account.Status!=="Active"){closedAccounts.push(card);card.hide()}
$.ajax({url:"report/account_balance.php?accountId="+account.Id,method:"GET",dataType:"JSON",success:function(payload){if(payload.state){var balances=payload.content;runningBalance.text(toCurrency(balances.Balance));projectedBalance.text(toCurrency(balances.Projection))}else{runningBalance.text("!");projectedBalance.text("!");console.error(payload.content)}}});card.click(function(){transaction_panel.show();transaction.loadAccount(account)});return card}
function toCurrency(value){return Intl.NumberFormat("en-US",{minimumFractionDigits:2,maximumFractionDigits:2}).format(value)}